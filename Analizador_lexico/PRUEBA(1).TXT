/* Revisión 2 - MMHM: aprobado  */

USE Portal;
GO

-- ================================================================================================           
-- Universidad Rafael Landívar           
-- Autor: Brayan Rodríguez García (19268) - BKRG          
-- Fecha de creación: 20140725        
-- Descripción: Obtiene todas las solicitudes de becas según el estatus recibido por parámetro
-- ================================================================================================
-- BKRG se toma en cuenta localidad usuario para las sedes a mostrar
-- BKRG se agrega el no_ayuda por configuración de estatus
-- BKRG se agrega datos de dirección en el query
-- BKRG 20150811 r83760 se agrga opción de ver número de solicitud
-- CSRM Req. 84798 se corrigió ya que estaba halando las solicitudes de la trabajadora social
--   porque estaba de la sigueinte forma:
--		AND e.ESTATUS = @L_AI_NO_ESTATUS OR ( @L_AI_NO_ESTATUS = 0 AND e.ESTATUS <> 1 )
--   se colocaron los paréntesis seguido del and y al finalizar el  paréntesis del or
-- CSRM req. 82904 - se traen las solicitudes por año
-- CSRM 20160802 REQ. 93754  y 92555 Se debe reflejar la cuota de estudio de URL ingresada por
--   est cuando es reingreso y la cuota establecida cuando es primer ingreso. Se deben reflejar
--   todos los estatus sin omisión.	
-- CSRM 20170813 REQ.102662 SCC.4599 Se corrigió la forma de obtención del año de la convocatoria,
--   ahora se obtiene en base al periodo del curso relacionado a la solicitud.
-- MLFR 20190206 09:42 Se quitan los numerales del order by y se especifica el nombre de la columna 
-- CMBO 20190403 REQ.115116 SCC.5319 Para la beca URL-KFW III (ß), a los que son extranjeros de
--  países del trifinio (Salvador, Honduras) se busca el detalle de sus departamentos y municipios
--  en la tabla de extranjeros.  Para otro extranjero se muestran siempre los de Guatemala.
-- ================================================================================================

ALTER PROCEDURE dbo.USP_DAEF_GET_SOLICITUDES_POR_ESTATUS
(
  @AI_NO_ESTATUS   AS INT,
  @AI_NoProveedor  AS INT,
  @AI_NO_SOLICITUD AS INT,
  @anio            AS INT
)
AS
  BEGIN
    DECLARE @L_AI_NO_ESTATUS   AS INT,
            @l_AI_NoProveedor  AS INT,
            @L_AI_NO_SOLICITUD AS INT,
            @L_anio            AS INT;

    SELECT @L_AI_NO_ESTATUS = @AI_NO_ESTATUS,
           @l_AI_NoProveedor = @AI_NoProveedor,
           @L_AI_NO_SOLICITUD = @AI_NO_SOLICITUD,
           @L_anio = @anio;

    SELECT DISTINCT
           s.NO_SOLICITUD,
           s.NO_BOLETA,
           s.NO_CARNET,
           t.Descripcion AS AYUDA,
           e.NOMBRE AS ESTATUS,
           e.ESTATUS AS NO_ESTATUS,
           ( SELECT TOP 1
                    CASE ES.VISIBLE
                      WHEN 1 THEN ES.COMENTARIO
                      ELSE ''
                    END
             FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
             WHERE ES.ESTATUS_NUEVO = 2
                   AND ES.NO_SOLICITUD = s.NO_SOLICITUD
             ORDER BY ES.FEC_TRANSAC ASC) AS COMENTARIO_VISIBLE,
           ( SELECT TOP 1
                    ES.COMENTARIO
             FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
             WHERE ES.ESTATUS_NUEVO = 2
                   AND ES.NO_SOLICITUD = s.NO_SOLICITUD
             ORDER BY ES.FEC_TRANSAC ASC) AS COMENTARIO,
           master.dbo.f_nombre(P.NOMBRES, P.PRIMER_APEL, P.SEGUNDO_APEL, P.CASADA_APEL, 0) AS SOLICITANTE,
           ( SELECT TOP 1
                    ES.USUARIO
             FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
             WHERE ES.ESTATUS_NUEVO = 2
                   AND ES.NO_SOLICITUD = s.NO_SOLICITUD
             ORDER BY ES.FEC_TRANSAC ASC) AS USUARIO,
           ( SELECT TOP 1
                    ES.FEC_TRANSAC
             FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
             WHERE ES.ESTATUS_NUEVO = 2
                   AND ES.NO_SOLICITUD = s.NO_SOLICITUD
             ORDER BY ES.FEC_TRANSAC ASC) AS FECHA_TERMINO,
           ( SELECT TOP 1
                    ES.USUARIO
             FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
             WHERE ES.ESTATUS_NUEVO = 3
                   AND ES.NO_SOLICITUD = s.NO_SOLICITUD
             ORDER BY ES.FEC_TRANSAC ASC) AS USUARIO_VERIFICA,
           ( SELECT TOP 1
                    ES.FEC_TRANSAC
             FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
             WHERE ES.ESTATUS_NUEVO = 3
                   AND ES.NO_SOLICITUD = s.NO_SOLICITUD
             ORDER BY ES.FEC_TRANSAC ASC) AS FECHA_VERIFICA,
           SE.Nombre AS SEDE,
           P.NO_PERSONA AS NO_SOLICITANTE,
           TES.NO_TIPO_ESTUDIO,
           TES.TIPO_ESTUDIO,
           s.NO_PROVEEDOR AS NO_TRABAJADOR_SOCIAL,
           RTRIM(master.dbo.f_nombre_universal(s.NO_PROVEEDOR, 2, 0)) + '(' + CAST(s.NO_PROVEEDOR AS VARCHAR(10)) + ')' AS TRABAJADOR_SOCIAL,
           ( SELECT COUNT(1)
             FROM Becas.dbo.SB_SOLICITUD AS s2 WITH (NOLOCK)
                  INNER JOIN Becas.dbo.SB_SECCION_ACADEMICA AS SA WITH (NOLOCK) ON s2.NO_SOLICITUD = SA.NO_SOLICITUD
                  INNER JOIN Registro.dbo.EST_INSCRITO AS EI WITH (NOLOCK) ON s2.NO_CARNET = EI.No_Carnet
             WHERE EI.Cursos_Asignados > 0
                   AND s.NO_SOLICITUD = s2.NO_SOLICITUD) AS REINGRESO,
           s.NO_AYUDA,
           RTRIM(P.DIRECCION) + ' ' + RTRIM(P.DIRECCION_EXTRA) AS DIRECCION,
           P.ZONA,
           P.COLONIA,
           P.TELEFONO,
           P.Telefono_celular,
           /*INICIO CMBO 20190403 REQ.115116 SCC.5319)*/
           CASE
             WHEN ( s.NO_AYUDA = 'ß'
                    AND P.NO_PAIS <> '01') THEN
               COALESCE(( SELECT D.NOMBRE
                          FROM SAF.dbo.DEPARTAMENTO_PAIS AS D
                          WHERE CAST(D.NO_PAIS AS INT) = P.NO_PAIS
                                AND CAST(D.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO), ( SELECT D.NOMBRE
                                                                                           FROM SAF.dbo.DEPARTAMENTO AS D
                                                                                           WHERE CAST(D.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO))
             ELSE ( SELECT D.NOMBRE
                    FROM SAF.dbo.DEPARTAMENTO AS D
                    WHERE CAST(D.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO)
           END AS DEPARTAMENTO,
           CASE
             WHEN ( s.NO_AYUDA = 'ß'
                    AND P.NO_PAIS <> '01') THEN
               COALESCE(( SELECT M.NOMBRE
                          FROM SAF.dbo.MUNICIPIO_PAIS AS M
                          WHERE CAST(M.NO_PAIS AS INT) = P.NO_PAIS
                                AND CAST(M.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO
                                AND CAST(M.NO_MUNICIPIO AS INT) = P.NO_MUNICIPIO), ( SELECT M.NOMBRE
                                                                                     FROM SAF.dbo.MUNICIPIO AS M
                                                                                     WHERE CAST(M.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO
                                                                                           AND CAST(M.NO_MUNICIPIO AS INT) = P.NO_MUNICIPIO))
             ELSE ( SELECT M.NOMBRE
                    FROM SAF.dbo.MUNICIPIO AS M
                    WHERE CAST(M.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO
                          AND CAST(M.NO_MUNICIPIO AS INT) = P.NO_MUNICIPIO)
           END AS MUNICIPIO
    /*FIN CMBO 20190403 REQ.115116 SCC.5319 */
    FROM Becas.dbo.SB_SOLICITUD AS s WITH (NOLOCK)
         INNER JOIN Becas.dbo.TIP_AYUDA AS t ON s.NO_AYUDA = t.No_Ayuda
         INNER JOIN Becas.dbo.SB_ESTATUS_SOLICITUD AS e ON e.ESTATUS = s.ESTATUS
         INNER JOIN Proyectos.dbo.CL_PERSONA AS P WITH (NOLOCK) ON P.NO_PERSONA = s.NO_PERSONA
         LEFT JOIN Becas.dbo.SB_SECCION_ACADEMICA AS SA WITH (NOLOCK) ON SA.NO_SOLICITUD = s.NO_SOLICITUD
         LEFT JOIN Registro.dbo.SEDE AS SE ON SE.No_Sede = SA.NO_SEDE
         LEFT JOIN Sistemas.dbo.USUARIO AS U WITH (NOLOCK) ON U.NO_PROVEEDOR = @l_AI_NoProveedor
         LEFT JOIN Sistemas.dbo.USUARIO_SEDE AS US ON U.USUARIO = US.USUARIO
                                                      AND APLICACION = 4
                                                      AND ( US.NO_SEDE = SA.NO_SEDE
                                                            OR US.NO_SEDE = '01')
         LEFT JOIN Becas.dbo.SB_TIPO_ESTUDIO_SOCIOECONOMICO AS TES ON TES.NO_TIPO_ESTUDIO = s.TIPO_ESTUDIO
    WHERE s.TRABAJADOR_SOCIAL = 0
          AND ( e.ESTATUS = @L_AI_NO_ESTATUS
                OR (@L_AI_NO_ESTATUS = 0
                /*CSRM: se comenta a solicitud de INGRID  AND e.ESTATUS <> 1*/
                ))
          AND ( s.NO_SOLICITUD = @L_AI_NO_SOLICITUD
                OR @L_AI_NO_SOLICITUD = 0)
          AND ((/*INICIO CSRM 20170813 REQ.102662 SCC.4599*/
                 /*SELECT TOP 1
                                YEAR(ESA.FEC_TRANSAC)
                        FROM    Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD ESA ( NOLOCK )
                        WHERE   ESA.NO_SOLICITUD = s.NO_SOLICITUD
                        ORDER BY ESA.FEC_TRANSAC DESC*/
                 SELECT TOP (1)
                        YEAR(cp.FECHA_INICIO)
                 FROM Proyectos.dbo.CL_PERIODO AS cp
                 WHERE cp.NO_PERIODO = s.NO_PERIODO
                /*FIN CSRM 20170813 REQ.102662 SCC.4599*/
                ) = @L_anio
               OR @L_anio = -1)
    ORDER BY FECHA_VERIFICA;
  END;
GO

-- ================================================================================================         
-- Universidad Rafael Landívar         
-- Autor: Brayan Rodríguez García (19268) - BKRG        
-- Fecha de creación: 20150616      
-- Descripción: Obtiene todas las solicitudes de becas según el trabajador indicado
-- ================================================================================================
-- BKRG se toma en cuenta localidad usuario para las sedes a mostrar
-- CSROJAS 0909/2015  Req. 84635 Ingreso perCapita se debe traer de datos ingresados por la 
--   trabajadora social
-- CSRM REQ 84287 SE AGREGO EL CAMPO REVISADO PARA VERIFICAR SI YA FUE REVISADO POR USUARIO.
-- CSRM req. 82904 - se traen las solicitudes por año
-- CSRM 07/10/2015 REQ.84279  SE TRAE CUOTA_ESTUDIANTE 
-- CSRM 20151116 REQ.85486 SCC.22404: Se agrega la columna de promedio, punteo cou y punteo total
-- CSRM 20160120 REQ.86535 SCC.3649 no mostrar globito de comentarios si el comentario se guardó como vacío
-- CSRM 20160705 REQ.93157 se cambio la tabla EACOU_RESULTADO_CANDIDATO por EACOU_RESULTADO_CANDIDATO_grupo
-- CSRM 10/06/2016 SCC.3979 req.92554 ARREGA EL ORDER BY, FECHA DE VERIFICACIÓN url ( COLUMNA 7)
-- CSRM 30/08/2016 SCC.4100 req.94121 Dependiendo el parametro(@tipo_reporte) se  ordena por nombre(0)
--   o por fecha de verificación (1)
-- MLFR 20161013 1010 Faltaba manejo de transacciones.
-- CSRM 20170503 REQ.100384 SCC.4423 .POR AMPLIACIÓN DE TIPO DE COMENTARIO SE RESTRINGE 
--  EXCLUSIVAMENTE A COMENTARIOS DE COMITE. 0 PARA LOS QUE NO HAN SIDO REVISADOS Y 1 PARA LOS REVISADOS.
-- CSRM 20170721 REQ.103714 SCC.4586 SE CORRIGE LA FORMA EN QUE TRAE EL ULTIMO ESTABLECIMIENTO
--   YA QUE SI MARCA QUE 2 ESTABLECIMIENTOS FUERON SUS ULTIMOS DA PROBLEMAS, SE COLOCA TOP 1.
-- CSRM 20170813 REQ.102662 SCC. Se corrigió la forma de obtención del año de la convocatoria, ahora
--  se obtiene en base al periodo del curso relacionado a la solicitud.
-- CSRM 20171011 REQ.105666 SCC.4696 Se corrigió la forma en que obtiene el campo Colegio para obtener
--  siempre el actual. y no ordenado por fec. transac., También se implemento el TRY-CATCH
-- MMHM 20181206 15:14 REQ.115383 SCC.5237 Se agregó la beca URL-KFW III con el estatus
--  'En Revisión' (15) cuando se deben obtener con estatus 'Informe TS Validado' (6), que es el
--   que se usa en la opción Revisión de Solicitud de Becas.
-- CMBO 20190403 REQ.115116 SCC.5319 Para la beca URL-KFW III (ß), a los que son extranjeros de
--  países del trifinio (Salvador, Honduras) se busca el detalle de sus departamentos y municipios
--  en la tabla de extranjeros.  Para otro extranjero se muestran siempre los de Guatemala.
-- ================================================================================================

ALTER PROCEDURE dbo.USP_DAEF_GET_SOLICITUDES_POR_TRABAJADOR_ASIGNADO
(
  @AS_TRABAJADOR    AS VARCHAR(10),
  @AI_ESTATUS       AS INT,
  @AI_REVISION      AS INT,
  @AS_SEDE          AS INT,
  @aiNoAdjudicacion AS INT,
  @asUsuario        AS VARCHAR(20),
  @asUsuario2       AS VARCHAR(20),
  @anio             AS INT,
  @tipo_reporte     AS INT
)
AS
  BEGIN
    BEGIN TRAN tran_sp;

    IF EXISTS ( SELECT 1
                FROM Portal.sys.sysobjects
                WHERE xtype = 'u'
                      AND name = 'tbl_USP_DAEF_GET_SOLICITUDES_POR_TRABAJADOR_ASIGNADO')
      DROP TABLE Portal.dbo.tbl_USP_DAEF_GET_SOLICITUDES_POR_TRABAJADOR_ASIGNADO;

    DECLARE @L_AS_TRABAJADOR    AS VARCHAR(10),
            @L_AI_ESTATUS       AS INT,
            @L_AS_SEDE          AS INT,
            @L_aiNoAdjudicacion AS INT,
            @L_AI_REVISION      AS INT,
            @L_asUsuario        AS VARCHAR(20),
            @L_asUsuario2       AS VARCHAR(20),
            @L_anio             AS INT,
            @L_tipo_reporte     AS INT;
    DECLARE @ErrorMessage NVARCHAR(2044);
    DECLARE @ErrorSeverity INT;
    DECLARE @ErrorState INT;

    SELECT @L_AS_TRABAJADOR = @AS_TRABAJADOR,
           @L_AI_ESTATUS = @AI_ESTATUS,
           @L_AS_SEDE = @AS_SEDE,
           @L_aiNoAdjudicacion = @aiNoAdjudicacion,
           @L_asUsuario = @asUsuario,
           @L_AI_REVISION = @AI_REVISION,
           @L_asUsuario2 = @asUsuario2,
           @L_anio = @anio,
           @L_tipo_reporte = @tipo_reporte;

    DECLARE @ls_orden NVARCHAR(12);
    DECLARE @ls_query NVARCHAR(3000);

    BEGIN TRY
      CREATE TABLE Portal.dbo.tbl_USP_DAEF_GET_SOLICITUDES_POR_TRABAJADOR_ASIGNADO
      (
        NO_SOLICITUD                     INT,
        NO_BOLETA                        VARCHAR(20),
        NO_CARNET                        VARCHAR(50),
        TIPO                             VARCHAR(14),
        CARRERA                          VARCHAR(40),
        ULTIMO_ESTABLECIMIENTO           VARCHAR(50),
        FECHA_VERIFICA                   DATETIME,
        CUOTA_URL_COLEGIO                VARCHAR(50),
        DIFERENCIA_INGRESOS              DECIMAL(7, 2),
        PUNTEO                           DECIMAL(7, 2),
        COMENTARIO_DAEF                  VARCHAR(500),
        INGRESO_PERCAPITA                DECIMAL(7, 2),
        AYUDA                            CHAR(50),
        ESTATUS                          VARCHAR(50),
        NO_ESTATUS                       INT,
        COMENTARIO_VISIBLE               VARCHAR(500),
        COMENTARIO                       VARCHAR(500),
        SOLICITANTE                      VARCHAR(78),
        USUARIO                          VARCHAR(20),
        FECHA_TERMINO                    DATETIME,
        SEDE                             CHAR(30),
        NO_SOLICITANTE                   INT,
        NO_TIPO_ESTUDIO                  INT,
        TIPO_ESTUDIO                     VARCHAR(50),
        NO_TRABAJADOR_SOCIAL             INT,
        TRABAJADOR_SOCIAL                VARCHAR(62),
        DIRECCION                        VARCHAR(286),
        ZONA                             TINYINT,
        COLONIA                          CHAR(30),
        TELEFONO                         CHAR(20),
        Telefono_celular                 CHAR(20),
        DEPARTAMENTO                     CHAR(50),
        MUNICIPIO                        CHAR(50),
        NO_MUNICIPIO                     VARCHAR(2),
        CORREO_ELECTRONICO               CHAR(100),
        FECHA_ASIGNACION                 DATETIME,
        USUARIO_ASIGNA                   VARCHAR(20),
        NO_SOLICITUD_TRABAJADOR_SOCIAL   INT,
        AYUDA_RECOMENDADA                VARCHAR(50),
        FECHA_VERIFICA_INFORME           DATETIME,
        PORCENTAJE_CUOTA_RECOMENDADO     TINYINT,
        PORCENTAJE_MATRICULA_RECOMENDADO TINYINT,
        NO_AYUDA_RECOMENDADO             CHAR(1),
        NO_ADJUDICACION                  INT,
        visible                          BIT,
        NO_AYUDA                         CHAR(1),
        COLEGIO                          VARCHAR(50),
        CUOTA_COLEGIO                    SMALLMONEY,
        RELACION_CUOTA_URL               VARCHAR(27),
        COMENTARIO_ESTATUS               VARCHAR(500),
        REVISADO                         BIT,
        REVISION_VISIBLE                 BIT,
        CUOTA_ESTUDIANTE                 SMALLMONEY,
        PROMEDIO                         DECIMAL(5, 2),
        PUNTEO_COU                       DECIMAL(5, 2),
        PUNTEO_TOTAL                     DECIMAL(5, 2)
      );

      IF (@L_tipo_reporte = 1)
        SET @ls_orden = N'ORDER BY 7;'; /*CSRM 10/06/2016 SCC.3979 req. 92554  */
      ELSE
        SET @ls_orden = N'ORDER BY 18;';

      INSERT Portal.dbo.tbl_USP_DAEF_GET_SOLICITUDES_POR_TRABAJADOR_ASIGNADO
      (
        NO_SOLICITUD,
        NO_BOLETA,
        NO_CARNET,
        TIPO,
        CARRERA,
        ULTIMO_ESTABLECIMIENTO,
        FECHA_VERIFICA,
        CUOTA_URL_COLEGIO,
        DIFERENCIA_INGRESOS,
        PUNTEO,
        COMENTARIO_DAEF,
        INGRESO_PERCAPITA,
        AYUDA,
        ESTATUS,
        NO_ESTATUS,
        COMENTARIO_VISIBLE,
        COMENTARIO,
        SOLICITANTE,
        USUARIO,
        FECHA_TERMINO,
        SEDE,
        NO_SOLICITANTE,
        NO_TIPO_ESTUDIO,
        TIPO_ESTUDIO,
        NO_TRABAJADOR_SOCIAL,
        TRABAJADOR_SOCIAL,
        DIRECCION,
        ZONA,
        COLONIA,
        TELEFONO,
        Telefono_celular,
        DEPARTAMENTO,
        MUNICIPIO,
        NO_MUNICIPIO,
        CORREO_ELECTRONICO,
        FECHA_ASIGNACION,
        USUARIO_ASIGNA,
        NO_SOLICITUD_TRABAJADOR_SOCIAL,
        AYUDA_RECOMENDADA,
        FECHA_VERIFICA_INFORME,
        PORCENTAJE_CUOTA_RECOMENDADO,
        PORCENTAJE_MATRICULA_RECOMENDADO,
        NO_AYUDA_RECOMENDADO,
        NO_ADJUDICACION,
        visible,
        NO_AYUDA,
        COLEGIO,
        CUOTA_COLEGIO,
        RELACION_CUOTA_URL,
        COMENTARIO_ESTATUS,
        REVISADO,
        REVISION_VISIBLE,
        CUOTA_ESTUDIANTE,
        PROMEDIO,
        PUNTEO_COU,
        PUNTEO_TOTAL
      )
      SELECT s.NO_SOLICITUD,                                                                                                                                                             --1
             s.NO_BOLETA,                                                                                                                                                                --2
             s.NO_CARNET,                                                                                                                                                                --3
             (CASE
                WHEN ( SELECT COUNT(1)
                       FROM Registro.dbo.EST_INSCRITO AS ei WITH (NOLOCK)
                       WHERE ei.No_Carnet = s.No_Carnet
                             AND ei.Cursos_Asignados > 0) > 0 THEN 'Re-Ingreso'
                ELSE 'Primer Ingreso'
              END) AS TIPO,                                                                                                                                                              --4
             RTRIM(CAR.Nombre_Corto) AS CARRERA,                                                                                                                                         --5
             (CASE
                WHEN ( SELECT COUNT(1)
                       FROM Registro.dbo.EST_INSCRITO AS ei WITH (NOLOCK)
                       WHERE ei.No_Carnet = s.No_Carnet
                             AND ei.Cursos_Asignados > 0) > 0 THEN 'URL'
                ELSE (/*INICIO CSRM 20170721 REQ.103714 SCC.4586 SE COLOCA TOP 1*/
                       SELECT TOP 1
                              HES.ESTABLECIMIENTO
                       /*FIN CSRM 20170721 REQ.103714 SCC.4586 SE COLOCA TOP 1*/
                       FROM Becas.dbo.SB_HISTORIAL_ESTUDIO AS HES WITH (NOLOCK)
                       WHERE HES.NO_SOLICITUD = s.NO_SOLICITUD
                             AND HES.ESTABLECIMIENTO_ACTUAL = 1)
              END) AS ULTIMO_ESTABLECIMIENTO,                                                                                                                                            --6
             ( SELECT TOP 1
                      ES.FEC_TRANSAC
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
               WHERE ES.ESTATUS_NUEVO IN (3, 14, 16)
                     AND ES.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY ES.FEC_TRANSAC ASC) AS FECHA_VERIFICA,                                                                                                                           /*CSRM 10/06/2016 SCC.3979 req.92554*/ --7 
             (CASE
                WHEN ( SELECT COUNT(1)
                       FROM Registro.dbo.EST_INSCRITO AS ei WITH (NOLOCK)
                       WHERE ei.No_Carnet = s.No_Carnet
                             AND ei.Cursos_Asignados > 0) > 0 THEN '---'
                ELSE
              ( SELECT TOP 1
                       CAST(CAST(((ISNULL(HES.COLEGIATURA, 0) / ISNULL(( SELECT TOP 1
                                                                                Monto
                                                                         FROM Becas.dbo.CUOTAS_ESTUDIO_MENSUALES AS CEM
                                                                         WHERE CEM.No_Sede = CAR.No_Sede
                                                                               AND CEM.No_Facultad = CAR.No_Facultad
                                                                               AND CEM.No_Carrera = CAR.No_Carrera), 1)) * 100) AS DECIMAL(5, 2)) AS VARCHAR(100))
                       + '%'
                FROM Becas.dbo.SB_HISTORIAL_ESTUDIO AS HES WITH (NOLOCK)
                WHERE HES.NO_SOLICITUD = s.NO_SOLICITUD
                      AND HES.ESTABLECIMIENTO_ACTUAL = 1)
              END) AS CUOTA_URL_COLEGIO,                                                                                                                                                 --8
             (ISNULL(sss.TOTAL_INGRESOS_FAMILIARES, 0) - ISNULL(sss.TOTAL_EGRESOS_FAMILIARES, 0)) AS DIFERENCIA_INGRESOS,                                                                --9
             s.PUNTEO,                                                                                                                                                                   --10
             ( SELECT TOP 1
                      HS.COMENTARIO
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS HS WITH (NOLOCK)
               WHERE HS.ESTATUS_NUEVO = 8
                     AND HS.NO_SOLICITUD = s.NO_SOLICITUD) AS COMENTARIO_DAEF,                                                                                                           --11
             CAST(ROUND((ISNULL(sss.TOTAL_INGRESOS_FAMILIARES, 0) / (( SELECT COUNT(1)
                                                                       FROM Becas.dbo.SB_SECCION_FAMILIAR AS SF WITH (NOLOCK)
                                                                       WHERE SF.DEPENDIENTE_ECONOMICO = 1
                                                                             AND SF.NO_SOLICITUD = ST.NO_SOLICITUD_TRABAJADOR_SOCIAL) + 1)), 2) AS DECIMAL(10, 2)) AS INGRESO_PERCAPITA, --12
             t.Descripcion AS AYUDA,                                                                                                                                                     --13
             e.NOMBRE AS ESTATUS,                                                                                                                                                        --14
             e.ESTATUS AS NO_ESTATUS,                                                                                                                                                    --15
             ( SELECT TOP 1
                      CASE ES.VISIBLE
                        WHEN 1 THEN ES.COMENTARIO
                        ELSE ''
                      END
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
               WHERE ES.ESTATUS_NUEVO = 2
                     AND ES.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY ES.FEC_TRANSAC DESC) AS COMENTARIO_VISIBLE,                                                                                                                      --16
             ( SELECT TOP 1
                      ES.COMENTARIO
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
               WHERE ES.ESTATUS_NUEVO = 2
                     AND ES.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY ES.FEC_TRANSAC DESC) AS COMENTARIO,                                                                                                                              --17
             master.dbo.f_nombre(P.Nombres, P.Primer_Apel, P.Segundo_Apel, P.Casada_Apel, 1) AS SOLICITANTE,                                                                             --18
             ( SELECT TOP 1
                      ES.USUARIO
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
               WHERE ES.ESTATUS_NUEVO = 2
                     AND ES.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY ES.FEC_TRANSAC ASC) AS USUARIO,
             ( SELECT TOP 1
                      ES.FEC_TRANSAC
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ES WITH (NOLOCK)
               WHERE ES.ESTATUS_NUEVO = 2
                     AND ES.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY ES.FEC_TRANSAC ASC) AS FECHA_TERMINO,
             SE.Nombre AS SEDE,
             P.NO_PERSONA AS NO_SOLICITANTE,
             TES.NO_TIPO_ESTUDIO,
             TES.TIPO_ESTUDIO,
             s.NO_PROVEEDOR AS NO_TRABAJADOR_SOCIAL,
             RTRIM(TS.NOMBRE_PROVEEDOR) + '(' + CAST(s.NO_PROVEEDOR AS VARCHAR(10)) + ')' AS TRABAJADOR_SOCIAL,
             RTRIM(P.Direccion) + ' ' + RTRIM(P.DIRECCION_EXTRA) AS DIRECCION,
             P.Zona,
             P.Colonia,
             P.Telefono,
             P.Telefono_Celular,
             /*INICIO CMBO 20190403 REQ.115116 SCC.5319)*/
             CASE
               WHEN ( s.NO_AYUDA = 'ß'
                      AND P.No_Pais <> '01') THEN
                 COALESCE(( SELECT D.NOMBRE
                            FROM SAF.dbo.DEPARTAMENTO_PAIS AS D
                            WHERE CAST(D.NO_PAIS AS INT) = P.NO_PAIS
                                  AND CAST(D.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO), ( SELECT D.NOMBRE
                                                                                             FROM SAF.dbo.DEPARTAMENTO AS D
                                                                                             WHERE CAST(D.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO))
               ELSE ( SELECT D.NOMBRE
                      FROM SAF.dbo.DEPARTAMENTO AS D
                      WHERE CAST(D.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO)
             END AS DEPARTAMENTO,
             CASE
               WHEN ( s.NO_AYUDA = 'ß'
                      AND P.No_Pais <> '01') THEN
                 COALESCE(( SELECT M.NOMBRE
                            FROM SAF.dbo.MUNICIPIO_PAIS AS M
                            WHERE CAST(M.NO_PAIS AS INT) = P.NO_PAIS
                                  AND CAST(M.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO
                                  AND CAST(M.NO_MUNICIPIO AS INT) = P.NO_MUNICIPIO), ( SELECT M.NOMBRE
                                                                                       FROM SAF.dbo.MUNICIPIO AS M
                                                                                       WHERE CAST(M.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO
                                                                                             AND CAST(M.NO_MUNICIPIO AS INT) = P.NO_MUNICIPIO))
               ELSE ( SELECT M.NOMBRE
                      FROM SAF.dbo.MUNICIPIO AS M
                      WHERE CAST(M.NO_DEPARTAMENTO AS INT) = P.NO_DEPARTAMENTO
                            AND CAST(M.NO_MUNICIPIO AS INT) = P.NO_MUNICIPIO)
             END AS MUNICIPIO,
             /*FIN CMBO 20190403 REQ.115116 SCC.5319 */
             P.NO_MUNICIPIO,
             P.Correo_Electronico,
             ( SELECT TOP 1
                      ESA.FEC_TRANSAC
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ESA WITH (NOLOCK) --ASIGNÓ
               WHERE ESA.ESTATUS_NUEVO = 4
                     AND ESA.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY ESA.FEC_TRANSAC DESC) AS FECHA_ASIGNACION,
             ( SELECT TOP 1
                      ESA.USUARIO
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ESA WITH (NOLOCK) --ASIGNÓ
               WHERE ESA.ESTATUS_NUEVO = 4
                     AND ESA.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY ESA.FEC_TRANSAC DESC) AS USUARIO_ASIGNA,
             ST.NO_SOLICITUD_TRABAJADOR_SOCIAL,
             RTRIM(tar.Descripcion) + ' ' + CAST(s.PORCENTAJE_CUOTA_RECOMENDADO AS VARCHAR(3)) AS AYUDA_RECOMENDADA,
             ( SELECT TOP 1
                      ESA.FEC_TRANSAC
               FROM Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD AS ESA WITH (NOLOCK) --ASIGNÓ
               WHERE ESA.ESTATUS_NUEVO = 3
                     AND ESA.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY ESA.FEC_TRANSAC DESC) AS FECHA_VERIFICA_INFORME,
             s.PORCENTAJE_CUOTA_RECOMENDADO,
             s.PORCENTAJE_MATRICULA_RECOMENDADO,
             tar.No_Ayuda AS NO_AYUDA_RECOMENDADO,
             s.NO_ADJUDICACION,
             CAST((CASE
                     WHEN ( SELECT COUNT(1)
                            FROM Becas.dbo.SB_COMENTARIO_COMITE_SOLICITUD AS COM WITH (NOLOCK)
                            WHERE COM.NO_SOLICITUD = s.NO_SOLICITUD
                                  /*INICIO CSRM 20160120 REQ.86535 SCC.3649*/
                                  AND RTRIM(LTRIM(COM.COMENTARIO)) <> ''
                                  /*FIN CSRM 20160120 REQ.86535 SCC.3649*/
                                  /*INICIO CSRM 20170503 REQ.100384 SCC.4423*/
                                  AND COM.REVISADO IN (1, 0)
             /*FIN CSRM 20170503 REQ.100384 SCC.4423*/
             ) > 0 THEN 1
                     ELSE 0
                   END) AS BIT) AS visible,
             s.NO_AYUDA,
             (

               /*INICIO CSRM 20171011 REQ.105666 SCC.4696 Se corrigió la forma en que obtiene el campo Colegio*/
               /*   SELECT TOP 1
                   HS.ESTABLECIMIENTO
               FROM Becas.dbo.SB_HISTORIAL_ESTUDIO HS (NOLOCK)
               WHERE HS.NO_SOLICITUD = s.NO_SOLICITUD
               ORDER BY Fecha_Fin DESC
			   */
               SELECT TOP 1
                      HES.ESTABLECIMIENTO
               FROM Becas.dbo.SB_HISTORIAL_ESTUDIO AS HES WITH (NOLOCK)
               WHERE HES.NO_SOLICITUD = s.NO_SOLICITUD
                     AND HES.ESTABLECIMIENTO_ACTUAL = 1
             /*FIN CSRM 20171011 REQ.105666 SCC.4696 Se corrigió la forma en que obtiene el campo Colegio*/
             ) AS COLEGIO,
             dac.CUOTA_ESTUDIANTE AS CUOTA_COLEGIO,
             (CASE
                WHEN CE.Monto IS NULL THEN 'Cuota Carrera No Específica'
                ELSE CAST(CAST((dac.CUOTA_ESTUDIO / CE.Monto * 100) AS DECIMAL(5, 2)) AS VARCHAR(10))
              END) AS RELACION_CUOTA_URL,
             CASE s.ESTATUS
               WHEN 15 THEN s.COMENTARIO_ESTATUS
               ELSE ''
             END AS COMENTARIO_ESTATUS,
             ISNULL(( SELECT CCS2.REVISADO
                      FROM Becas.dbo.SB_COMENTARIO_COMITE_SOLICITUD AS CCS2 WITH (NOLOCK)
                      WHERE CCS2.NO_SOLICITUD = s.NO_SOLICITUD
                            AND USUARIO = @L_asUsuario2
                            /*INICIO CSRM 20170503 REQ.100384 SCC.4423*/
                            AND CCS2.REVISADO IN (1, 0)
               /*FIN CSRM 20170503 REQ.100384 SCC.4423*/
               ),   0) AS REVISADO,
             CAST((CASE
                     WHEN ( SELECT COUNT(1)
                            FROM Becas.dbo.SB_COMENTARIO_COMITE_SOLICITUD AS COM WITH (NOLOCK)
                            WHERE COM.NO_SOLICITUD = s.NO_SOLICITUD
                                  AND COM.REVISADO = 1) > 0 THEN 1
                     ELSE 0
                   END) AS BIT) AS REVISION_VISIBLE,
             (CASE
                WHEN ( SELECT COUNT(1)
                       FROM Becas.dbo.SB_CUOTA_ESTUDIO AS SCE WITH (NOLOCK)
                       WHERE SCE.NO_SOLICITUD = s.NO_SOLICITUD) = 0 THEN (dac.CUOTA_ESTUDIANTE)
                ELSE ( SELECT TOP 1
                              SCE2.CUOTA_ESTUDIANTE
                       FROM Becas.dbo.SB_CUOTA_ESTUDIO AS SCE2 WITH (NOLOCK)
                       WHERE SCE2.NO_SOLICITUD = s.NO_SOLICITUD)
              END) AS CUOTA_ESTUDIANTE,
               /*INICIO CSRM 20151116 REQ.85486 SCC.22404*/
             ( SELECT TOP 1
                      she.PROMEDIO
               FROM Becas.dbo.SB_HISTORIAL_ESTUDIO AS she WITH (NOLOCK)
               WHERE she.ESTABLECIMIENTO_ACTUAL = 1
                     AND she.NO_SOLICITUD = s.NO_SOLICITUD) AS PROMEDIO,
             CONVERT(DECIMAL(5, 2), ( SELECT TOP 1
                                             (( SELECT SUM(rc.VALOR)
                                                FROM Proyectos.dbo.EACOU_RESULTADO_CANDIDATO_GRUPO AS rc WITH (NOLOCK)
                                                WHERE rc.NUMERO = c.NUMERO
                                                      AND rc.ANIO = c.ANIO
                                                      AND rc.NO_SUB_GRUPO = 1) / 170.00) * 100.00 AS PUNTEO_COU
                                      FROM Registro.dbo.CANDIDATO AS c WITH (NOLOCK)
                                      WHERE c.No_Carnet_Traslado = s.NO_CARNET)) AS PUNTEO_COU,
             CONVERT(DECIMAL(5, 2), ( SELECT (SELECT TOP 1
                                                     ((( SELECT SUM(rc.VALOR)
                                                         FROM Proyectos.dbo.EACOU_RESULTADO_CANDIDATO_GRUPO AS rc (NOLOCK)
                                                         WHERE rc.NUMERO = c.NUMERO
                                                               AND rc.ANIO = c.ANIO
                                                               AND rc.NO_SUB_GRUPO = 1) / 170.00) * 100.00) * 60 / 100.00 AS Punteo_COU
                                              FROM Registro.dbo.CANDIDATO AS c WITH (NOLOCK)
                                              WHERE c.No_Carnet_Traslado = s.NO_CARNET) + (
                                                                                            /*INICIO CSRM 20170721 REQ.103714 SCC.4586 SE COLOCA TOP 1*/
                                                                                            SELECT TOP 1
                                                                                              /*FIN CSRM 20170721 REQ.103714 SCC.4586 SE COLOCA TOP 1*/
                                                                                                   (she.PROMEDIO * 40.00) / 100.00
                                                                                            FROM Becas.dbo.SB_HISTORIAL_ESTUDIO AS she WITH (NOLOCK)
                                                                                            WHERE she.ESTABLECIMIENTO_ACTUAL = 1
                                                                                                  AND she.NO_SOLICITUD = s.NO_SOLICITUD))) AS PUNTEO_TOTAL
      /*FIN CSRM 20151116 REQ.85486 SCC.22404*/
      FROM Becas.dbo.SB_SOLICITUD AS s WITH (NOLOCK)
           INNER JOIN Becas.dbo.TIP_AYUDA AS t ON s.NO_AYUDA = t.No_Ayuda
           INNER JOIN Becas.dbo.SB_ESTATUS_SOLICITUD AS e ON e.ESTATUS = s.ESTATUS
           INNER JOIN Proyectos.dbo.CL_PERSONA AS P WITH (NOLOCK) ON P.NO_PERSONA = s.NO_PERSONA
           INNER JOIN Becas.dbo.SB_SECCION_ACADEMICA AS SA WITH (NOLOCK) ON SA.NO_SOLICITUD = s.NO_SOLICITUD
           INNER JOIN Registro.dbo.SEDE AS SE ON SE.No_Sede = SA.NO_SEDE
           INNER JOIN Registro.dbo.CARRERA AS CAR ON SA.NO_CARRERA = CAR.sefacar
           LEFT JOIN Becas.dbo.SB_DATOS_ACADEMICOS_COLEGIO AS dac WITH (NOLOCK) ON s.NO_SOLICITUD = dac.NO_SOLICITUD
           LEFT JOIN SAF.dbo.PROVEEDOR AS TS WITH (NOLOCK) ON TS.NO_PROVEEDOR = s.NO_PROVEEDOR
                                                              AND TS.TIP_PROVEEDOR = s.TIP_PROVEEDOR
           LEFT JOIN Becas.dbo.SB_SECCION_SOCIOECONOMICA AS SEC WITH (NOLOCK) ON s.NO_SOLICITUD = SEC.NO_SOLICITUD
           LEFT JOIN Becas.dbo.SB_TIPO_ESTUDIO_SOCIOECONOMICO AS TES ON TES.NO_TIPO_ESTUDIO = s.TIPO_ESTUDIO
           LEFT JOIN Becas.dbo.SB_SOLICITUD_SB_SOLICITUD_TRABAJADOR_SOCIAL AS ST WITH (NOLOCK) ON s.NO_SOLICITUD = ST.NO_SOLICITUD_ESTUDIANTE
           LEFT JOIN Becas.dbo.SB_SECCION_SOCIOECONOMICA AS sss WITH (NOLOCK) ON sss.NO_SOLICITUD = ST.NO_SOLICITUD_TRABAJADOR_SOCIAL
           LEFT JOIN Becas.dbo.TIP_AYUDA AS tar ON s.NO_AYUDA_RECOMENDADO = tar.No_Ayuda
           LEFT JOIN Becas.dbo.ADJUDICACION AS a ON s.NO_ADJUDICACION = a.No_Adjudicacion
           LEFT JOIN Becas.dbo.CUOTAS_ESTUDIO_MENSUALES AS CE ON SA.NO_SEDE = CE.No_Sede
                                                                 AND SA.NO_FACULTAD = CE.No_Facultad
                                                                 AND CAR.No_Carrera = CE.No_Carrera
      WHERE ( TS.NO_PROVEEDOR = @L_AS_TRABAJADOR
              OR @L_AS_TRABAJADOR = 0)
            AND ( s.ESTATUS = @L_AI_ESTATUS
                  OR @L_AI_ESTATUS = 0
                  OR ( s.ESTATUS = 15
                       AND @L_AI_REVISION = 1
                       AND ( ( s.NO_AYUDA = 'T'
                               AND @L_AI_ESTATUS = 14)
                             OR ( s.NO_AYUDA = '3'
                                  AND @L_AI_ESTATUS = 6)
                             OR ( s.NO_AYUDA = 'ß'
                                  AND @L_AI_ESTATUS = 6) /*MMHM 20181206 15:14 REQ.115383 SCC.5237*/
                             OR ( s.NO_AYUDA = 'Y'
                                  AND @L_AI_ESTATUS = 16))))
            AND s.TRABAJADOR_SOCIAL = 0
            AND ( ( SE.No_Sede = '01'
                    AND @L_AS_SEDE = 1)
                  OR @L_AS_SEDE = 0
                  OR ( SE.No_Sede <> '01'
                       AND @L_AS_SEDE = 2))
            AND ( s.NO_ADJUDICACION = @L_aiNoAdjudicacion
                  OR @L_aiNoAdjudicacion = 0)
            AND ( @L_AS_TRABAJADOR <> 0
                  OR @L_asUsuario = 'comiteBecas'
                  OR EXISTS ( SELECT 1
                              FROM Sistemas.dbo.USUARIO AS U WITH (NOLOCK)
                                   INNER JOIN Sistemas.dbo.USUARIO_SEDE AS US ON U.USUARIO = US.USUARIO
                                                                                 AND ( US.NO_SEDE = SA.NO_SEDE
                                                                                       OR US.NO_SEDE = '01')
                                                                                 AND US.APLICACION = 4
                              WHERE CAST(U.NO_PROVEEDOR AS VARCHAR(20)) = @L_asUsuario))
            AND ((
                   /*INICIO CSRM 20170813 REQ.102662*/
                   /*SELECT TOP 1
                                YEAR(ESA.FEC_TRANSAC)
                        FROM    Becas.dbo.SB_HISTORIAL_ESTATUS_SOLICITUD ESA ( NOLOCK )
                        WHERE   ESA.NO_SOLICITUD = s.NO_SOLICITUD
                        ORDER BY ESA.FEC_TRANSAC DESC*/
                   SELECT TOP 1
                          YEAR(cp.FECHA_INICIO)
                   FROM Proyectos.dbo.CL_PERIODO AS cp
                   WHERE cp.NO_PERIODO = s.NO_PERIODO
                  /*FIN CSRM 20170813 REQ.102662*/
                  ) = @L_anio
                 OR @L_anio = -1);

      SET @ls_query = N'SELECT NO_SOLICITUD	,
							NO_BOLETA	,
							NO_CARNET	,
							TIPO	,
							CARRERA	,
							ULTIMO_ESTABLECIMIENTO	,
							FECHA_VERIFICA	,
							CUOTA_URL_COLEGIO	,
							DIFERENCIA_INGRESOS	,
							PUNTEO	,
							COMENTARIO_DAEF	,
							INGRESO_PERCAPITA	,
							AYUDA	,
							ESTATUS	,
							NO_ESTATUS	,
							COMENTARIO_VISIBLE	,
							COMENTARIO	,
							SOLICITANTE	,
							USUARIO	,
							FECHA_TERMINO	,
							SEDE	,
							NO_SOLICITANTE	,
							NO_TIPO_ESTUDIO	,
							TIPO_ESTUDIO	,
							NO_TRABAJADOR_SOCIAL	,
							TRABAJADOR_SOCIAL	,
							DIRECCION	,
							ZONA	,
							COLONIA	,
							TELEFONO	,
							Telefono_celular	,
							DEPARTAMENTO	,
							MUNICIPIO	,
							NO_MUNICIPIO	,
							CORREO_ELECTRONICO	,
							FECHA_ASIGNACION	,
							USUARIO_ASIGNA	,
							NO_SOLICITUD_TRABAJADOR_SOCIAL	,
							AYUDA_RECOMENDADA	,
							FECHA_VERIFICA_INFORME	,
							PORCENTAJE_CUOTA_RECOMENDADO	,
							PORCENTAJE_MATRICULA_RECOMENDADO	,
							NO_AYUDA_RECOMENDADO	,
							NO_ADJUDICACION	,
							visible	,
							NO_AYUDA	,
							COLEGIO	,
							CUOTA_COLEGIO	,
							RELACION_CUOTA_URL	,
							COMENTARIO_ESTATUS	,
							REVISADO	,
							REVISION_VISIBLE	,
							CUOTA_ESTUDIANTE	,
							PROMEDIO	,
							PUNTEO_COU	,
							PUNTEO_TOTAl FROM portal.dbo.tbl_USP_DAEF_GET_SOLICITUDES_POR_TRABAJADOR_ASIGNADO ' + @ls_orden;

      EXEC sp_executesql @ls_query;
    END TRY
    BEGIN CATCH
      SET @ErrorMessage = N'error al generar el reporte';

      GOTO ERROR;
    END CATCH;

    COMMIT TRAN tran_sp;

    RETURN; /*CMBO 20190403 REQ.115116 SCC.5319*/

    ERROR:
    SET @ErrorMessage = ISNULL('Error.' + CONVERT(VARCHAR(5), ERROR_NUMBER()) + ' - ', '') + @ErrorMessage;
    SET @ErrorSeverity = ISNULL(ERROR_SEVERITY(), 16);
    SET @ErrorState = ISNULL(ERROR_STATE(), -1);

    IF (@@TRANCOUNT > 0)
      ROLLBACK TRAN;

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END;
GO